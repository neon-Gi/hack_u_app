syntax = "proto3";

package multiplayer;

// Room型
message Room {
  string hostname = 1;            // ルーム識別
  string status = 2;              // "waiting":開始待機、"on game":ゲーム中、"kill":ホストプレイヤーが退出
  repeated string players = 3;    // 参加しているプレイヤー
}

message Game {
	string hostname = 1;
	string status = 2;  // "ready":ルール説明・準備中、"on game":ゲーム中、"finish":ゲーム終了
	repeated string players = 3;
	string title = 4; // ゲーム名
	string host_action = 5;
	string player_action = 6;
	int32 timer = 7;
	int32 host_point = 8;
	int32 player_point = 9;
}

// ルーム作成
message createRoomRequest {
	string hostname = 1; // 作成者
}

message createRoomResponse {
	Room room = 1;
}

// ルーム参加
message joinRoomRequest {
	string hostname = 1; // 作成者
	string currentname = 2; // リクエストを送るプレイヤー
}

message joinRoomResponse {
	Room room = 1;
}

// ルーム情報更新受け取り
message updateRoomRequest {
	string hostname = 1; // 作成者
}

message updateRoomResponse {
	Room room = 1;
}

// ルーム退出
message exitRoomRequest {
	string hostname = 1;
	string currentname = 2;
}

message exitRoomResponse {
	bool success = 1;
}

// ゲーム開始
message startGameRequest {
	string hostname = 1;
	string currentname = 2;
}

message startGameResponse {
	Game game = 1;
}

// ゲーム情報更新
message updateGameRequest {
	string hostname = 1;
	string currentname = 2;
	string action = 3; // ready wait:準備中、ready:開始待機、no:未行動、action:行動、stop:同時行動ペナルティ
}

message updateGameResponse {
	Game game = 1;
}

service MultiplayerService {
    rpc CreateRoom (createRoomRequest) returns (createRoomResponse);  // ルーム作成
    rpc JoinRoom (joinRoomRequest) returns (joinRoomResponse); // ルーム参加
    rpc UpdateRoom (updateRoomRequest) returns (updateRoomResponse); // ルームデータ更新
    rpc ExitRoom (exitRoomRequest) returns (exitRoomResponse); // ルームデータ更新
    rpc StartGame (startGameRequest) returns (startGameResponse); // ゲーム開始
    rpc UpdateGame (updateGameRequest) returns (updateGameResponse); // ゲームデータ更新
}